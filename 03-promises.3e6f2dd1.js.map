{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SA8BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,mBAAmBH,QAAeC,KAE1CG,EAAO,kBAAkBJ,QAAeC,KAE1CO,eAAiB,IAChBP,MAvCMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAEF,MAAMC,EAAWF,EAAEG,OAAOD,SACpBE,EAAcF,EAASG,OAAOC,MACpC,IAAIC,EAAaC,OAAON,EAASb,MAAMiB,OACnCG,EAAYD,OAAON,EAASQ,KAAKJ,OACjCK,EAAkB,EAEtB,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAAaQ,GAAK,EACpCD,GAAmB,EAEnBJ,GAAcE,EAEdtB,EAAcwB,EAAiBJ,GAC5BM,MAAKC,IACJ7B,EAAA8B,OAAOC,QAAQF,MAEhBG,OAAMC,IACLjC,EAAA8B,OAAOI,QAAQD","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  const elements = e.target.elements;\n  const amountValue = elements.amount.value;\n  let delayValue = Number(elements.delay.value);\n  let stepValue = Number(elements.step.value);\n  let promisePosition = 0;\n\n  for (let i = 0; i < amountValue; i += 1) {\n    promisePosition += 1;\n\n    delayValue += stepValue;\n\n    createPromise(promisePosition, delayValue)\n      .then(successMessage => {\n        Notify.success(successMessage);\n      })\n      .catch(rejectMessage => {\n        Notify.failure(rejectMessage);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve(`Fulfill promise ${position} in ${delay}`);\n      } else {\n        reject(`Reject promise ${position} in ${delay}`);\n      }\n      promiseCounter = 0;\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","promiseCounter","document","querySelector","addEventListener","e","preventDefault","elements","target","amountValue","amount","value","delayValue","Number","stepValue","step","promisePosition","i","then","successMessage","Notify","success","catch","rejectMessage","failure"],"version":3,"file":"03-promises.3e6f2dd1.js.map"}