{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA+BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,mBAAkCK,OAAfR,EAAS,QAAYQ,OAANP,IAE1CG,EAAO,kBAAiCI,OAAfR,EAAS,QAAYQ,OAANP,IAE1CQ,eAAiB,IAChBR,MAxCMS,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBASF,IAPA,IAAMC,EAAWF,EAAEG,OAAOD,SACpBE,EAAcF,EAASG,OAAOC,MAC9BC,EAAaC,OAAON,EAASd,MAAMkB,OACnCG,EAAYD,OAAON,EAASQ,KAAKJ,OAEnCK,EAAkB,EAEbC,EAAI,EAAGA,EAAIR,EAAaQ,GAAK,EAKpC1B,EAJAyB,GAAmB,EAEAJ,EAAaE,EAAYG,GAGzCC,MAAK,SAAAC,GACJ9B,EAAA+B,OAAOC,QAAQF,MAEhBG,OAAM,SAAAC,GACLlC,EAAA+B,OAAOI,QAAQD,S","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  const elements = e.target.elements;\n  const amountValue = elements.amount.value;\n  const delayValue = Number(elements.delay.value);\n  const stepValue = Number(elements.step.value);\n  let delayStepCounter = 0;\n  let promisePosition = 0;\n\n  for (let i = 0; i < amountValue; i += 1) {\n    promisePosition += 1;\n\n    delayStepCounter = delayValue + stepValue * i;\n\n    createPromise(promisePosition, delayStepCounter)\n      .then(successMessage => {\n        Notify.success(successMessage);\n      })\n      .catch(rejectMessage => {\n        Notify.failure(rejectMessage);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve(`Fulfill promise ${position} in ${delay}`);\n      } else {\n        reject(`Reject promise ${position} in ${delay}`);\n      }\n      promiseCounter = 0;\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","concat","promiseCounter","document","querySelector","addEventListener","e","preventDefault","elements","target","amountValue","amount","value","delayValue","Number","stepValue","step","promisePosition","i","then","successMessage","Notify","success","catch","rejectMessage","failure"],"version":3,"file":"03-promises.51f6d312.js.map"}